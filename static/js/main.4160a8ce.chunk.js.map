{"version":3,"sources":["dist/img/me_240.jpg","dist/img/logo-github.svg","dist/img/logo-medium.svg","dist/img/logo-linkedin.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","profilePicBackground","backgroundImage","imgMe240","className","style","href","target","rel","alt","src","imgLogoGithub","imgLogoMedium","imgLogoLinkedin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,+NC+E5BC,MAxEf,WACI,IAAMC,EAAuB,CACzBC,gBAAiB,OAASC,IAAW,KAGzC,OACI,0BAAMC,UAAU,OACZ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,kBACX,yBAAKC,MAAOJ,KAGhB,yBAAKG,UAAU,eACX,4CACA,sEACA,6BAASA,UAAU,gBACf,4BACI,4BACI,uBAAGE,KAAK,2BAA2BC,OAAO,SAASC,IAAI,uBACnD,yBAAKC,IAAI,GAAGC,IAAKC,QAGzB,4BACI,uBAAGL,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAClD,yBAAKC,IAAI,GAAGC,IAAKE,QAGzB,4BACI,uBAAGN,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBACzD,yBAAKC,IAAI,GAAGC,IAAKG,UAKjC,6BAAST,UAAU,OACf,uTAQA,wDAC8B,uBAAGE,KAAK,qBAClCC,OAAO,SAASC,IAAI,uBADM,SAD9B,yQAaZ,yBAAKJ,UAAU,eACX,yBAAKA,UAAU,eACX,6BAASA,UAAU,6BACf,+CACA,6BACI,uBAAGE,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAA7D,iBACA,uBAAGF,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAAnE,eACA,uBAAGF,KAAK,sCAAsCC,OAAO,SAASC,IAAI,uBAAlE,yBC1DRM,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,kB","file":"static/js/main.4160a8ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_240.6e4e2402.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-github.38d42861.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-medium.76438be9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-linkedin.018f55b6.svg\";","import React from 'react';\nimport imgMe240 from './dist/img/me_240.jpg';\nimport imgLogoGithub from './dist/img/logo-github.svg';\nimport imgLogoMedium from './dist/img/logo-medium.svg';\nimport imgLogoLinkedin from './dist/img/logo-linkedin.svg';\nimport './App.css';\n\nfunction App() {\n    const profilePicBackground = {\n        backgroundImage: 'url(' + imgMe240 + ')',\n    };\n\n    return (\n        <main className=\"app\">\n            <div className=\"app-content app-content-profile\">\n                <div className=\"app-profilepic\">\n                    <div style={profilePicBackground}></div>\n                </div>\n\n                <div className=\"app-article\">\n                    <h1>FIKO BORIZQY</h1>\n                    <h3>Web Developer in Yogyakarta, Indonesia</h3>\n                    <section className=\"social-links\">\n                        <ul>\n                            <li>\n                                <a href=\"//github.com/fikoborizqy\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <img alt=\"\" src={imgLogoGithub} />\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"//medium.com/@bestafiko\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <img alt=\"\" src={imgLogoMedium} />\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"//linkedin.com/in/fikoborizqy/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <img alt=\"\" src={imgLogoLinkedin} />\n                                </a>\n                            </li>\n                        </ul>\n                    </section>\n                    <article className=\"bio\">\n                        <p>\n                            I am an ex envato author, wordpress theme/plugin \n                            author, web developer (Back-End), web designer \n                            (Front-End), currently living in Yogyakarta, \n                            Indonesia. My interests range from technology to \n                            programming (I was facing with Laravel Framework in \n                            2017). I am also interested in design.\n                        </p>\n                        <p>\n                            Currently I'm working for <a href=\"//icubeonline.com/\" \n                            target=\"_blank\" rel=\"noopener noreferrer\">Icube</a> as \n                            a Magento 2 Developer. It was so hard at the first \n                            time, I never face the horrible configuration like \n                            this. But once I got deeper on it, I was thinking \n                            that it is the smartest framework I've ever known. \n                            The way to configure all of the content is amazing.\n                        </p>\n                    </article>\n                </div>\n            </div>\n\n            <div className=\"app-content\">\n                <div className=\"app-article\">\n                    <section className=\"text-center app-portfolio\">\n                        <h4>Small Portfolio</h4>\n                        <div>\n                            <a href=\"//github.com/fikoborizqy/troop\" target=\"_blank\" rel=\"noopener noreferrer\">Troop Decimal</a>\n                            <a href=\"//github.com/fikoborizqy/dummy-image\" target=\"_blank\" rel=\"noopener noreferrer\">Dummy Image</a>\n                            <a href=\"//github.com/fikoborizqy/bose-crypt\" target=\"_blank\" rel=\"noopener noreferrer\">Bose Encryption</a>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}